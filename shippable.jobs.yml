jobs:
  - name: non-grisham-job
    type: runSh
    steps:
      - IN: sample_python_runCI
      - IN: reg_dh_ric03uec
        switch: off
      - IN: global_state
        switch: off
      - TASK:
        - script: echo 'This is task in old format'
        - script: ls -alh
        - script: env
        - script: df -h
    on_success:
      - script: echo 'succeeded'
    on_failure:
      - script: echo 'failed'
    flags:
      - runsh

  - name: execute_tasks_list
    type: runSh
    on_start:
      - NOTIFY: slack
    runtime:
      architecture: x86_64
      os: Ubuntu_16.04
      container: true
    steps:
      - IN: reg_dh_ric03uec
      - IN: sample_python_runCI
      - IN: global_state
        switch: off
      - TASK:
          name: host_check_OS
          runtime:
            container: false
            options:
              env:
                - ENV1: VALUE1
                - ENV2: VALUE2
          script:
            - docker images
            - uname -a
            - df -h
            - cat /etc/os-release
            - env
      - TASK:
          name:  container_check_OS
          runtime:
            options:
              env:
                - CONTAINER_ENV3: VALUE3
                - CONTAINER_ENV4: VALUE4
              imageName: drydock/u14pytall
              imageTag: master
          script:
            - echo "Checking container os version"
            - cat /etc/*-release
            - df -h
            - env
            - echo "$BUILD_NUMBER" > job_state.txt
            - shipctl copy_file_to_state "job_state.txt"
      - TASK:
          runtime:
            options:
              imageName: drydock/u14pytall
              imageTag: master
              pull: true
          script:
            - echo "sleeping for a while..."
            - sleep 30
            - shipctl copy_file_from_prev_state "job_state.txt" "prev_state.txt"
            - cat prev_state.txt || true
            - cp -vr job_state.txt $BUILD_DIR/OUT/global_state/state/
      - OUT: image_version
      - OUT: global_state
    on_success:
      - script: echo "successfully completed"
      - NOTIFY: slack
    on_failure:
      - script: echo "Oops !!! something went wrong"
      - NOTIFY: slack
    flags:
      - runSh

  - name: no_runtime
    type: runSh
    steps:
      - IN: reg_dh_ric03uec
      - IN: execute_tasks_list
        switch: off
      - IN: global_state
        switch: off
      - TASK:
          name: host_check_OS
          script:
            - uname -a
            - df -h
            - sudo docker images
            - cp -vr $BUILD_DIR/IN/global_state/state/job_state.txt .
            - cat job_state.txt
    flags:
      - runSh

  - name: job_runtime
    type: runSh
    runtime:
      architecture: x86_64
      os: Ubuntu_16.04
    steps:
      - IN: reg_dh_ric03uec
      - IN: execute_tasks_list
        switch: off
      - IN: global_state
        switch: off
      - TASK:
          name: host_check_OS
          script:
            - uname -a
            - df -h
            - sudo docker images
            - cp -vr $BUILD_DIR/IN/global_state/state/job_state.txt .
            - cat job_state.txt
    flags:
      - runSh

  - name: failed_job
    type: runSh
    runtime:
      architecture: x86_64
      os: Ubuntu_16.04
      container: false
    steps:
      - IN: reg_dh_ric03uec
      - IN: execute_tasks_list
        switch: off
      - IN: global_state
        switch: off
      - TASK:
          name: host_check_OS
          runtime:
            options:
              env:
                ENV5: VALUE5
                ENV6: VALUE6
          script:
            - uname -a
            - df -h
            - cat /etc/os-release
            - sudo docker info
            - sudo docker images
            - cp -vr $BUILD_DIR/IN/global_state/state/job_state.txt .
            - this is an invalid command, should fail
    on_success:
      - script: echo "successfully completed"
      - NOTIFY: slack
    on_failure:
      - script: echo "Oops !!! something went wrong"
      - NOTIFY: slack
    flags:
      - runSh
