uobs:
  - name: non_grisham_job
    type: runSh
    steps:
      - IN: sample_python_runCI
      - IN: reg_dh_ric03uec
        switch: off
      - IN: global_state
        switch: off
      - TASK:
        - script: echo 'This is task in old format'
        - script: ls -alh
        - script: env
        - script: df -h
    on_success:
      - script: echo 'succeeded'
    on_failure:
      - script: echo 'failed'
    flags:
      - runsh

  - name: execute_tasks_list
    type: runSh
    on_start:
      - NOTIFY: slack
    runtime:
      cluster: dyn_u14_large_01
      container: true
    steps:
      - IN: reg_dh_ric03uec
      - IN: sample_python_runCI
      - IN: global_state
        switch: off
      - TASK:
          name: host_check_OS
          runtime:
            container: false
            options:
              env:
                - ENV1: VALUE1
                - ENV2: VALUE2
          script:
            - docker images
            - uname -a
            - df -h
            - cat /etc/os-release
            - env
      - TASK:
          name:  container_check_OS
          runtime:
            options:
              env:
                - CONTAINER_ENV3: VALUE3
                - CONTAINER_ENV4: VALUE4
              imageName: drydock/u14pytall
              imageTag: master
          script:
            - echo "Checking container os version"
            - cat /etc/*-release
            - df -h
            - env
            - echo "$BUILD_NUMBER" > job_state.txt
            - shipctl copy_file_to_state "job_state.txt"
      - TASK:
          runtime:
            options:
              imageName: drydock/u14pytall
              imageTag: master
              pull: true
          script:
            - echo "sleeping for a while..."
            - sleep 30
            - shipctl copy_file_from_prev_state "job_state.txt" "prev_state.txt"
            - cat prev_state.txt || true
            - cp -vr job_state.txt $BUILD_DIR/OUT/global_state/state/
      - OUT: global_state
    on_success:
      - script: echo "successfully completed"
      - NOTIFY: slack
    on_failure:
      - script: echo "Oops !!! something went wrong"
      - NOTIFY: slack
    flags:
      - runSh

  - name: job_with_no_runtime
    type: runSh
    steps:
      - IN: reg_dh_ric03uec
      - IN: execute_tasks_list
        switch: off
      - IN: global_state
        switch: off
      - IN: nginx-img
        pull: true
      - TASK:
          name: host_check_OS
          script:
            - uname -a
            - df -h
            - sudo docker images
            - cp -vr $BUILD_DIR/IN/global_state/state/job_state.txt .
            - cat job_state.txt
    flags:
      - runSh

  - name: job_with_timeout
    type: runSh
    runtime:
      cluster: cus_x86_u16_01
      container: true
      timeoutMinutes: 1
    steps:
      - IN: reg_dh_ric03uec
      - IN: job_with_no_runtime
      - IN: global_state
        switch: off
      - TASK:
          name: long_running_task
          script:
            - uname -a
            - df -h
            - sudo docker images
            - sleep 360
    flags:
      - runSh

  - name: job_with_runtime
    type: runSh
    runtime:
      cluster: cus_x86_u14_01
    steps:
      - IN: reg_dh_ric03uec
      - IN: execute_tasks_list
        switch: off
      - IN: nginx-img
        pull: false
      - IN: global_state
        switch: off
      - TASK:
          name: host_check_OS
          script:
            - uname -a
            - df -h
            - sudo docker images
            - cp -vr $BUILD_DIR/IN/global_state/state/job_state.txt .
            - cat job_state.txt
    flags:
      - runSh

  - name: failed_job
    type: runSh
    runtime:
      cluster: dyn_u14_large_01
      container: false
    steps:
      - IN: reg_dh_ric03uec
      - IN: execute_tasks_list
        switch: off
      - IN: global_state
        switch: off
      - TASK:
          name: host_check_OS
          runtime:
            options:
              env:
                ENV5: VALUE5
                ENV6: VALUE6
          script:
            - uname -a
            - df -h
            - cat /etc/os-release
            - sudo docker info
            - sudo docker images
            - cp -vr $BUILD_DIR/IN/global_state/state/job_state.txt .
            - this is an invalid command, should fail
    on_success:
      - script: echo "successfully completed"
      - NOTIFY: slack
    on_failure:
      - script: echo "Oops !!! something went wrong"
      - NOTIFY: slack
    flags:
      - runSh

  - name: failed_job_dependency
    type: runSh
    runtime:
      cluster: dyn_u14_large_01
      container: false
    dependencyMode: strict
    steps:
      - IN: reg_dh_ric03uec
      - IN: failed_job
        switch: off
      - IN: global_state
        switch: off
      - TASK:
          name: host_check_OS
          runtime:
            options:
              env:
                ENV5: VALUE5
                ENV6: VALUE6
          script:
            - uname -a
            - df -h
            - cat /etc/os-release
            - sudo docker info
    on_success:
      - script: echo "successfully completed"
      - NOTIFY: slack
    on_failure:
      - script: echo "Oops !!! something went wrong"
      - NOTIFY: slack
    flags:
      - runSh

  - name: inline_task
    type: runSh
    dependencyMode: immediate
    runtime:
      cluster: cus_x86_u16_01
      container: false
    steps:
      - IN: execute_tasks_list
        switch: off
      - IN: global_state
        switch: off
      - TASK:
        - script: pushd /tmp
        - script: ./buildImage.sh u14
        - script: popd
    on_success:
      - script: echo "successfully completed"
      - NOTIFY: slack
    on_failure:
      - script: echo "Oops !!! something went wrong"
      - NOTIFY: slack

  - name: x86_64_macOS
    type: runSh
    runtime:
      cluster: cus_x86_macOS_01
      container: false
    steps:
      - IN: sample_python_runCI
      - IN: reg_dh_ric03uec
        switch: off
      - TASK:
          name: mac-says-hello
          script:
            - echo "hello"
            - uname -a
            - xcode-select --version

  - name: aarch64_host_job
    type: runSh
    runtime:
      cluster: cus_aarch_u16_01
      container: false
    steps:
      - IN: sample_python_runCI
      - IN: reg_dh_ric03uec
        switch: off
      - TASK:
          name: check host architecture
          runtime:
            options:
              env:
                ENV_FOO: FOO
                ENV_BAR: BAR
          script:
            - echo "executing PRE_TASK steps 2"
            - echo "executing PRE_TASK steps 4"
            - uname -a
            - ps aux | wc -l
      - TASK:
          name: test_task_1
          runtime:
            container: false
          script:
            - echo "executing POST_TASK steps 2"
            - echo "executing POST_TASK steps 3"
    on_success:
      - script: echo 'on success !!!!!'
    on_failure:
      - script: 'echo ''Failed job .... :('''
    always:
      - script: echo 'this will always run'

  - name: x86_ubuntu1404_host
    type: runSh
    dependencyMode: strict
    runtime:
      container: false
    steps:
      - IN: sample_python_runCI
      - IN: reg_dh_ric03uec
        switch: off
      - TASK:
          name: check host architecture
          runtime:
            options:
              env:
                ENV_FOO: FOO
                ENV_BAR: BAR
          script:
            - echo "executing PRE_TASK steps 2"
            - echo "executing PRE_TASK steps 4"
            - uname -a
            - ps aux | wc -l
      - TASK:
          name: test_task_1
          runtime:
            container: false
          script:
            - echo "executing POST_TASK steps 2"
            - echo "executing POST_TASK steps 3"
    on_success:
      - script: echo 'on success !!!!!'
    on_failure:
      - script: 'echo ''Failed job .... :('''
    always:
      - script: echo 'this will always run'

  - name: docker_build_host
    type: runSh
    runtime:
      cluster: dyn_u14_large_01
      container: false
    steps:
      - IN: repo_sample_python
      - IN: reg_dh_ric03uec
        switch: off
      - TASK:
          name: docker build on the host
          script:
            - pushd $BUILD_DIR/IN/repo_sample_python/gitRepo
            - ls -atlh
            - export IMAGE_NAME=ric03uec/sample_python:grisham.host.$BUILD_NUMBER
            - docker build -t $IMAGE_NAME .
            - docker images
            - popd
      - OUT: image_sample_python
    on_success:
      - script: echo 'succeeded'
    on_failure:
      - script: echo 'failed'
    flags:
      - runsh

  - name: docker_build_container
    type: runSh
    runtime:
      cluster: dyn_u14_large_01
    steps:
      - IN: repo_sample_python
        switch: off
      - IN: reg_dh_ric03uec
        switch: off
      - IN: aws_ric03uec
        switch: off
      - TASK:
          name: docker build in a container
          script:
            - pushd $BUILD_DIR/IN/repo_sample_python/gitRepo
            - ls -atlh
            - export IMAGE_NAME=ric03uec/sample_python:grisham.container.$BUILD_NUMBER
            - docker build -t $IMAGE_NAME .
            - docker images
            - ACCESS_KEY=$(shipctl get_integration_resource_field "aws_ric03uec" "accesskey")
            - SECRET_KEY=$(shipctl get_integration_resource_field "aws_ric03uec" "secretkey")
            - shipctl post_resource_state "image_sample_python" "versionName" "$IMAGE_NAME"
            - env
            - popd
      - OUT: image_sample_python
    on_success:
      - script: echo 'succeeded'
    on_failure:
      - script: echo 'failed'
    flags:
      - runsh

  - name: deploy_ec2_ubuntu
    type: runSh
    runtime:
      cluster: dyn_u14_large_01
    steps:
      - IN: image_sample_python
      - IN: reg_dh_ric03uec
        switch: off
      - TASK:
          name: deploy the image to EC2 on ubuntu host
          script:
            - ls -atlh
            - IMAGE_VERSION=$(shipctl get_resource_version_number "image_sample_python")
            - echo $IMAGE_NAME
            - export IMAGE_NAME=foo
            - echo "deploying image $IMAGE_NAME"
            - sleep 10
    on_failure:
      - script: echo 'deployment to ec2 failed'

##############################################################################
##############################################################################

#### Dynamic - x86 - Ubuntu 14.04 - large
  - name: dyn_x86_ubuntu1404_large
    type: runSh
    runtime:
      cluster: dyn_x86_ubuntu1404_large
    steps:
      - IN: sample_python_runCI
      - TASK:
          name: host_task
          script:
            - uname -a
      - TASK:
          name: container_task
          script:
            - uname -a
    on_success:
      - script: echo 'job succeeded'
    on_failure:
      - script: echo 'job failed... :('
    always:
      - script: echo 'this should always run'
